# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:41:18+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, conint, constr


class AutomaticallyRotateAfterDaysType(RootModel[conint(ge=1, le=1000)]):
    root: conint(ge=1, le=1000)


class BooleanType(RootModel[bool]):
    root: bool


class ClientRequestTokenType(RootModel[constr(min_length=32, max_length=64)]):
    root: constr(min_length=32, max_length=64)


class CreatedDateType(RootModel[datetime]):
    root: datetime


class DecryptionFailure(RootModel[Any]):
    root: Any


class DeletedDateType(RootModel[datetime]):
    root: datetime


class DeletionDateType(RootModel[datetime]):
    root: datetime


class DescriptionType(RootModel[constr(max_length=2048)]):
    root: constr(max_length=2048)


class DurationType(RootModel[constr(pattern=r'[0-9h]+', min_length=2, max_length=3)]):
    root: constr(pattern=r'[0-9h]+', min_length=2, max_length=3)


class EncryptionFailure(RootModel[Any]):
    root: Any


class ErrorMessage(RootModel[str]):
    root: str


class ExcludeCharactersType(RootModel[constr(min_length=0, max_length=4096)]):
    root: constr(min_length=0, max_length=4096)


class ExcludeLowercaseType(RootModel[bool]):
    root: bool


class ExcludeNumbersType(RootModel[bool]):
    root: bool


class ExcludePunctuationType(RootModel[bool]):
    root: bool


class ExcludeUppercaseType(RootModel[bool]):
    root: bool


class FilterNameStringType(Enum):
    description = 'description'
    name = 'name'
    tag_key = 'tag-key'
    tag_value = 'tag-value'
    primary_region = 'primary-region'
    owning_service = 'owning-service'
    all = 'all'


class FilterValueStringType(
    RootModel[constr(pattern=r'^\!?[a-zA-Z0-9 :_@\/\+\=\.\-\!]*$', max_length=512)]
):
    root: constr(pattern=r'^\!?[a-zA-Z0-9 :_@\/\+\=\.\-\!]*$', max_length=512)


class FilterValuesStringList(RootModel[List[FilterValueStringType]]):
    root: List[FilterValueStringType] = Field(..., max_length=10, min_length=1)


class IncludeSpaceType(RootModel[bool]):
    root: bool


class InternalServiceError(RootModel[Any]):
    root: Any


class InvalidNextTokenException(RootModel[Any]):
    root: Any


class InvalidParameterException(RootModel[Any]):
    root: Any


class InvalidRequestException(RootModel[Any]):
    root: Any


class KmsKeyIdType(RootModel[constr(min_length=0, max_length=2048)]):
    root: constr(min_length=0, max_length=2048)


class LastAccessedDateType(RootModel[datetime]):
    root: datetime


class LastChangedDateType(RootModel[datetime]):
    root: datetime


class LastRotatedDateType(RootModel[datetime]):
    root: datetime


class LimitExceededException(RootModel[Any]):
    root: Any


class MalformedPolicyDocumentException(RootModel[Any]):
    root: Any


class MaxResultsType(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class NameType(RootModel[constr(min_length=1, max_length=512)]):
    root: constr(min_length=1, max_length=512)


class NextRotationDateType(RootModel[datetime]):
    root: datetime


class NextTokenType(RootModel[constr(min_length=1, max_length=4096)]):
    root: constr(min_length=1, max_length=4096)


class NonEmptyResourcePolicyType(RootModel[constr(min_length=1, max_length=20480)]):
    root: constr(min_length=1, max_length=20480)


class OwningServiceType(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class PasswordLengthType(RootModel[conint(ge=1, le=4096)]):
    root: conint(ge=1, le=4096)


class PreconditionNotMetException(RootModel[Any]):
    root: Any


class PublicPolicyException(RootModel[Any]):
    root: Any


class RandomPasswordType(RootModel[SecretStr]):
    root: SecretStr


class RecoveryWindowInDaysType(RootModel[int]):
    root: int


class RegionType(
    RootModel[constr(pattern=r'^([a-z]+-)+\d+$', min_length=1, max_length=128)]
):
    root: constr(pattern=r'^([a-z]+-)+\d+$', min_length=1, max_length=128)


class RemoveReplicaRegionListType(RootModel[List[RegionType]]):
    root: List[RegionType] = Field(..., min_length=1)


class ReplicaRegionType(BaseModel):
    KmsKeyId: Optional[KmsKeyIdType] = None
    Region: Optional[RegionType] = None


class RequireEachIncludedTypeType(RootModel[bool]):
    root: bool


class ResourceExistsException(RootModel[Any]):
    root: Any


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RotationEnabledType(RootModel[bool]):
    root: bool


class RotationLambdaARNType(RootModel[constr(min_length=0, max_length=2048)]):
    root: constr(min_length=0, max_length=2048)


class ScheduleExpressionType(
    RootModel[
        constr(pattern=r'[0-9A-Za-z\(\)#\?\*\-\/, ]+', min_length=1, max_length=256)
    ]
):
    root: constr(pattern=r'[0-9A-Za-z\(\)#\?\*\-\/, ]+', min_length=1, max_length=256)


class SecretARNType(RootModel[constr(min_length=20, max_length=2048)]):
    root: constr(min_length=20, max_length=2048)


class SecretBinaryType(RootModel[SecretStr]):
    root: SecretStr


class SecretIdType(RootModel[constr(min_length=1, max_length=2048)]):
    root: constr(min_length=1, max_length=2048)


class SecretNameType(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class SecretStringType(RootModel[SecretStr]):
    root: SecretStr


class SecretVersionIdType(RootModel[constr(min_length=32, max_length=64)]):
    root: constr(min_length=32, max_length=64)


class SecretVersionStageType(RootModel[constr(min_length=1, max_length=256)]):
    root: constr(min_length=1, max_length=256)


class SecretVersionStagesType(RootModel[List[SecretVersionStageType]]):
    root: List[SecretVersionStageType] = Field(..., max_length=20, min_length=1)


class SecretVersionsToStagesMapType(
    RootModel[Optional[Dict[str, SecretVersionStagesType]]]
):
    root: Optional[Dict[str, SecretVersionStagesType]] = None


class SortOrderType(Enum):
    asc = 'asc'
    desc = 'desc'


class StatusMessageType(RootModel[constr(min_length=1, max_length=4096)]):
    root: constr(min_length=1, max_length=4096)


class StatusType(Enum):
    InSync = 'InSync'
    Failed = 'Failed'
    InProgress = 'InProgress'


class StopReplicationToReplicaRequest(BaseModel):
    SecretId: SecretIdType


class StopReplicationToReplicaResponse(BaseModel):
    ARN: Optional[SecretARNType] = None


class TagKeyType(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagValueType(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class TimestampType(RootModel[datetime]):
    root: datetime


class UpdateSecretRequest(BaseModel):
    ClientRequestToken: Optional[ClientRequestTokenType] = None
    Description: Optional[DescriptionType] = None
    KmsKeyId: Optional[KmsKeyIdType] = None
    SecretBinary: Optional[SecretBinaryType] = None
    SecretId: SecretIdType
    SecretString: Optional[SecretStringType] = None


class UpdateSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None
    VersionId: Optional[SecretVersionIdType] = None


class UpdateSecretVersionStageRequest(BaseModel):
    MoveToVersionId: Optional[SecretVersionIdType] = None
    RemoveFromVersionId: Optional[SecretVersionIdType] = None
    SecretId: SecretIdType
    VersionStage: SecretVersionStageType


class UpdateSecretVersionStageResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None


class ValidateResourcePolicyRequest(BaseModel):
    ResourcePolicy: NonEmptyResourcePolicyType
    SecretId: Optional[SecretIdType] = None


class ValidationErrorsEntry(BaseModel):
    CheckName: Optional[NameType] = None
    ErrorMessage_1: Optional[ErrorMessage] = Field(None, alias='ErrorMessage')


class ValidationErrorsType(RootModel[List[ValidationErrorsEntry]]):
    root: List[ValidationErrorsEntry]


class XAmzTarget(Enum):
    secretsmanager_CancelRotateSecret = 'secretsmanager.CancelRotateSecret'


class XAmzTarget1(Enum):
    secretsmanager_CreateSecret = 'secretsmanager.CreateSecret'


class XAmzTarget2(Enum):
    secretsmanager_DeleteResourcePolicy = 'secretsmanager.DeleteResourcePolicy'


class XAmzTarget3(Enum):
    secretsmanager_DeleteSecret = 'secretsmanager.DeleteSecret'


class XAmzTarget4(Enum):
    secretsmanager_DescribeSecret = 'secretsmanager.DescribeSecret'


class XAmzTarget5(Enum):
    secretsmanager_GetRandomPassword = 'secretsmanager.GetRandomPassword'


class XAmzTarget6(Enum):
    secretsmanager_GetResourcePolicy = 'secretsmanager.GetResourcePolicy'


class XAmzTarget7(Enum):
    secretsmanager_GetSecretValue = 'secretsmanager.GetSecretValue'


class XAmzTarget8(Enum):
    secretsmanager_ListSecretVersionIds = 'secretsmanager.ListSecretVersionIds'


class XAmzTarget9(Enum):
    secretsmanager_ListSecrets = 'secretsmanager.ListSecrets'


class XAmzTarget10(Enum):
    secretsmanager_PutResourcePolicy = 'secretsmanager.PutResourcePolicy'


class XAmzTarget11(Enum):
    secretsmanager_PutSecretValue = 'secretsmanager.PutSecretValue'


class XAmzTarget12(Enum):
    secretsmanager_RemoveRegionsFromReplication = (
        'secretsmanager.RemoveRegionsFromReplication'
    )


class XAmzTarget13(Enum):
    secretsmanager_ReplicateSecretToRegions = 'secretsmanager.ReplicateSecretToRegions'


class XAmzTarget14(Enum):
    secretsmanager_RestoreSecret = 'secretsmanager.RestoreSecret'


class XAmzTarget15(Enum):
    secretsmanager_RotateSecret = 'secretsmanager.RotateSecret'


class XAmzTarget16(Enum):
    secretsmanager_StopReplicationToReplica = 'secretsmanager.StopReplicationToReplica'


class XAmzTarget17(Enum):
    secretsmanager_TagResource = 'secretsmanager.TagResource'


class XAmzTarget18(Enum):
    secretsmanager_UntagResource = 'secretsmanager.UntagResource'


class XAmzTarget19(Enum):
    secretsmanager_UpdateSecret = 'secretsmanager.UpdateSecret'


class XAmzTarget20(Enum):
    secretsmanager_UpdateSecretVersionStage = 'secretsmanager.UpdateSecretVersionStage'


class XAmzTarget21(Enum):
    secretsmanager_ValidateResourcePolicy = 'secretsmanager.ValidateResourcePolicy'


class AddReplicaRegionListType(RootModel[List[ReplicaRegionType]]):
    root: List[ReplicaRegionType] = Field(..., min_length=1)


class CancelRotateSecretRequest(BaseModel):
    SecretId: SecretIdType


class CancelRotateSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None
    VersionId: Optional[SecretVersionIdType] = None


class DeleteResourcePolicyRequest(BaseModel):
    SecretId: SecretIdType


class DeleteResourcePolicyResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[NameType] = None


class DeleteSecretRequest(BaseModel):
    ForceDeleteWithoutRecovery: Optional[BooleanType] = None
    RecoveryWindowInDays: Optional[RecoveryWindowInDaysType] = None
    SecretId: SecretIdType


class DeleteSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    DeletionDate: Optional[DeletionDateType] = None
    Name: Optional[SecretNameType] = None


class DescribeSecretRequest(BaseModel):
    SecretId: SecretIdType


class Filter(BaseModel):
    Key: Optional[FilterNameStringType] = None
    Values: Optional[FilterValuesStringList] = None


class FiltersListType(RootModel[List[Filter]]):
    root: List[Filter] = Field(..., max_length=10)


class GetRandomPasswordRequest(BaseModel):
    ExcludeCharacters: Optional[ExcludeCharactersType] = None
    ExcludeLowercase: Optional[ExcludeLowercaseType] = None
    ExcludeNumbers: Optional[ExcludeNumbersType] = None
    ExcludePunctuation: Optional[ExcludePunctuationType] = None
    ExcludeUppercase: Optional[ExcludeUppercaseType] = None
    IncludeSpace: Optional[IncludeSpaceType] = None
    PasswordLength: Optional[PasswordLengthType] = None
    RequireEachIncludedType: Optional[RequireEachIncludedTypeType] = None


class GetRandomPasswordResponse(BaseModel):
    RandomPassword: Optional[RandomPasswordType] = None


class GetResourcePolicyRequest(BaseModel):
    SecretId: SecretIdType


class GetResourcePolicyResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[NameType] = None
    ResourcePolicy: Optional[NonEmptyResourcePolicyType] = None


class GetSecretValueRequest(BaseModel):
    SecretId: SecretIdType
    VersionId: Optional[SecretVersionIdType] = None
    VersionStage: Optional[SecretVersionStageType] = None


class GetSecretValueResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    CreatedDate: Optional[CreatedDateType] = None
    Name: Optional[SecretNameType] = None
    SecretBinary: Optional[SecretBinaryType] = None
    SecretString: Optional[SecretStringType] = None
    VersionId: Optional[SecretVersionIdType] = None
    VersionStages: Optional[SecretVersionStagesType] = None


class KmsKeyIdListType(RootModel[List[KmsKeyIdType]]):
    root: List[KmsKeyIdType]


class ListSecretVersionIdsRequest(BaseModel):
    IncludeDeprecated: Optional[BooleanType] = None
    MaxResults: Optional[MaxResultsType] = None
    NextToken: Optional[NextTokenType] = None
    SecretId: SecretIdType


class ListSecretsRequest(BaseModel):
    Filters: Optional[FiltersListType] = None
    IncludePlannedDeletion: Optional[BooleanType] = None
    MaxResults: Optional[MaxResultsType] = None
    NextToken: Optional[NextTokenType] = None
    SortOrder: Optional[SortOrderType] = None


class PutResourcePolicyRequest(BaseModel):
    BlockPublicPolicy: Optional[BooleanType] = None
    ResourcePolicy: NonEmptyResourcePolicyType
    SecretId: SecretIdType


class PutResourcePolicyResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[NameType] = None


class PutSecretValueRequest(BaseModel):
    ClientRequestToken: Optional[ClientRequestTokenType] = None
    SecretBinary: Optional[SecretBinaryType] = None
    SecretId: SecretIdType
    SecretString: Optional[SecretStringType] = None
    VersionStages: Optional[SecretVersionStagesType] = None


class PutSecretValueResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None
    VersionId: Optional[SecretVersionIdType] = None
    VersionStages: Optional[SecretVersionStagesType] = None


class RemoveRegionsFromReplicationRequest(BaseModel):
    RemoveReplicaRegions: RemoveReplicaRegionListType
    SecretId: SecretIdType


class ReplicateSecretToRegionsRequest(BaseModel):
    AddReplicaRegions: AddReplicaRegionListType
    ForceOverwriteReplicaSecret: Optional[BooleanType] = None
    SecretId: SecretIdType


class ReplicationStatusType(BaseModel):
    KmsKeyId: Optional[KmsKeyIdType] = None
    LastAccessedDate: Optional[LastAccessedDateType] = None
    Region: Optional[RegionType] = None
    Status: Optional[StatusType] = None
    StatusMessage: Optional[StatusMessageType] = None


class RestoreSecretRequest(BaseModel):
    SecretId: SecretIdType


class RestoreSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None


class RotateSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None
    VersionId: Optional[SecretVersionIdType] = None


class RotationRulesType(BaseModel):
    AutomaticallyAfterDays: Optional[AutomaticallyRotateAfterDaysType] = None
    Duration: Optional[DurationType] = None
    ScheduleExpression: Optional[ScheduleExpressionType] = None


class SecretVersionsListEntry(BaseModel):
    CreatedDate: Optional[CreatedDateType] = None
    KmsKeyIds: Optional[KmsKeyIdListType] = None
    LastAccessedDate: Optional[LastAccessedDateType] = None
    VersionId: Optional[SecretVersionIdType] = None
    VersionStages: Optional[SecretVersionStagesType] = None


class SecretVersionsListType(RootModel[List[SecretVersionsListEntry]]):
    root: List[SecretVersionsListEntry]


class Tag(BaseModel):
    Key: Optional[TagKeyType] = None
    Value: Optional[TagValueType] = None


class TagKeyListType(RootModel[List[TagKeyType]]):
    root: List[TagKeyType]


class TagListType(RootModel[List[Tag]]):
    root: List[Tag]


class TagResourceRequest(BaseModel):
    SecretId: SecretIdType
    Tags: TagListType


class UntagResourceRequest(BaseModel):
    SecretId: SecretIdType
    TagKeys: TagKeyListType


class ValidateResourcePolicyResponse(BaseModel):
    PolicyValidationPassed: Optional[BooleanType] = None
    ValidationErrors: Optional[ValidationErrorsType] = None


class CreateSecretRequest(BaseModel):
    AddReplicaRegions: Optional[AddReplicaRegionListType] = None
    ClientRequestToken: Optional[ClientRequestTokenType] = None
    Description: Optional[DescriptionType] = None
    ForceOverwriteReplicaSecret: Optional[BooleanType] = None
    KmsKeyId: Optional[KmsKeyIdType] = None
    Name: NameType
    SecretBinary: Optional[SecretBinaryType] = None
    SecretString: Optional[SecretStringType] = None
    Tags: Optional[TagListType] = None


class ListSecretVersionIdsResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None
    NextToken: Optional[NextTokenType] = None
    Versions: Optional[SecretVersionsListType] = None


class ReplicationStatusListType(RootModel[List[ReplicationStatusType]]):
    root: List[ReplicationStatusType]


class RotateSecretRequest(BaseModel):
    ClientRequestToken: Optional[ClientRequestTokenType] = None
    RotateImmediately: Optional[BooleanType] = None
    RotationLambdaARN: Optional[RotationLambdaARNType] = None
    RotationRules: Optional[RotationRulesType] = None
    SecretId: SecretIdType


class SecretListEntry(BaseModel):
    ARN: Optional[SecretARNType] = None
    CreatedDate: Optional[TimestampType] = None
    DeletedDate: Optional[DeletedDateType] = None
    Description: Optional[DescriptionType] = None
    KmsKeyId: Optional[KmsKeyIdType] = None
    LastAccessedDate: Optional[LastAccessedDateType] = None
    LastChangedDate: Optional[LastChangedDateType] = None
    LastRotatedDate: Optional[LastRotatedDateType] = None
    Name: Optional[SecretNameType] = None
    NextRotationDate: Optional[NextRotationDateType] = None
    OwningService: Optional[OwningServiceType] = None
    PrimaryRegion: Optional[RegionType] = None
    RotationEnabled: Optional[RotationEnabledType] = None
    RotationLambdaARN: Optional[RotationLambdaARNType] = None
    RotationRules: Optional[RotationRulesType] = None
    SecretVersionsToStages: Optional[SecretVersionsToStagesMapType] = None
    Tags: Optional[TagListType] = None


class SecretListType(RootModel[List[SecretListEntry]]):
    root: List[SecretListEntry]


class CreateSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    Name: Optional[SecretNameType] = None
    ReplicationStatus: Optional[ReplicationStatusListType] = None
    VersionId: Optional[SecretVersionIdType] = None


class DescribeSecretResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    CreatedDate: Optional[TimestampType] = None
    DeletedDate: Optional[DeletedDateType] = None
    Description: Optional[DescriptionType] = None
    KmsKeyId: Optional[KmsKeyIdType] = None
    LastAccessedDate: Optional[LastAccessedDateType] = None
    LastChangedDate: Optional[LastChangedDateType] = None
    LastRotatedDate: Optional[LastRotatedDateType] = None
    Name: Optional[SecretNameType] = None
    NextRotationDate: Optional[NextRotationDateType] = None
    OwningService: Optional[OwningServiceType] = None
    PrimaryRegion: Optional[RegionType] = None
    ReplicationStatus: Optional[ReplicationStatusListType] = None
    RotationEnabled: Optional[RotationEnabledType] = None
    RotationLambdaARN: Optional[RotationLambdaARNType] = None
    RotationRules: Optional[RotationRulesType] = None
    Tags: Optional[TagListType] = None
    VersionIdsToStages: Optional[SecretVersionsToStagesMapType] = None


class ListSecretsResponse(BaseModel):
    NextToken: Optional[NextTokenType] = None
    SecretList: Optional[SecretListType] = None


class RemoveRegionsFromReplicationResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    ReplicationStatus: Optional[ReplicationStatusListType] = None


class ReplicateSecretToRegionsResponse(BaseModel):
    ARN: Optional[SecretARNType] = None
    ReplicationStatus: Optional[ReplicationStatusListType] = None
